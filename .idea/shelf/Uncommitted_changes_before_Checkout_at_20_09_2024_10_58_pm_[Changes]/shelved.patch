Index: frontend/src/App.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div id=\"app\">\r\n    <div class=\"main-content\">\r\n      <Nava :showDashboard=\"false\" />\r\n      <Header\r\n          :submit=\"submit\"\r\n          :resetBlocks=\"resetBlocks\"\r\n          :rebuild=\"rebuild\"\r\n          :startTime=\"startTime\"\r\n          @toggle-problem=\"toggleProblemSection\"\r\n      />\r\n      <div class=\"content-wrappers\" :class=\"{ 'problem-collapsed': isProblemCollapsed }\">\r\n        <div class=\"problem-section-wrapper\" :class=\"{ 'collapsed': isProblemCollapsed }\">\r\n          <ProblemSection v-show=\"!isProblemCollapsed\" @problem-section-loaded=\"onProblemSectionLoaded\" />\r\n          <button v-show=\"isProblemCollapsed\" @click=\"toggleProblemSection\" class=\"expand-button\"> >></button>\r\n        </div>\r\n        <div class=\"drag-drop-wrapper\">\r\n          <DragDrop ref=\"dragDrop\" @drag-drop-loaded=\"onDragDropLoaded\"/>\r\n<!--          <DragDropArea ref=\"dragDrop\" @drag-drop-loaded=\"onDragDropLoaded\" />-->\r\n          <div v-if=\"showOverlay\" class=\"overlay\">\r\n            <h1>Are you ready to Craft Code?</h1>\r\n            <img :src=\"Overlay\" alt=\"overlay\" />\r\n            <button @click=\"removeOverlay\" class=\"overlay-button\">Start</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"showloading\" class=\"loading\">\r\n        <loading />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport Nava from './components/nav.vue';\r\nimport Header from './components/Question/Header.vue';\r\nimport ProblemSection from './components/Question/ProblemSection.vue';\r\nimport Overlay from '@/assets/Topic/Context/Question/overlay.svg';\r\nimport loading from './components/Question/loading.vue';\r\nimport DragDrop from './components/Question/DragDrop.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Nava,\r\n    Header,\r\n    ProblemSection,\r\n    DragDrop,\r\n    loading,\r\n  },\r\n  data() {\r\n    return {\r\n      Overlay,\r\n      showOverlay: true,\r\n      isProblemCollapsed: false,\r\n      startTime: null,\r\n      showloading: true,\r\n      dragDropLoaded: true, // Flag for DragDropArea load completion\r\n      problemSectionLoaded: false,\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      this.$refs.dragDrop.submit();\r\n    },\r\n    resetBlocks() {\r\n      this.$refs.dragDrop.resetBlocks();\r\n    },\r\n    rebuild() {\r\n      this.$refs.dragDrop.rebuild();\r\n    },\r\n    removeOverlay() {\r\n      this.showOverlay = false;\r\n      this.isProblemCollapsed = true;\r\n      this.startTime = new Date();\r\n    },\r\n    toggleProblemSection() {\r\n      console.log('toggleProblemSection method called');\r\n      this.isProblemCollapsed = !this.isProblemCollapsed;\r\n    },\r\n    onDragDropLoaded() {\r\n      this.dragDropLoaded = true;\r\n      this.checkLoadingStatus();\r\n    },\r\n    onProblemSectionLoaded() {\r\n      this.problemSectionLoaded = true;\r\n      this.checkLoadingStatus();\r\n    },\r\n    checkLoadingStatus() {\r\n      if (this.dragDropLoaded && this.problemSectionLoaded) {\r\n        this.showloading = false; // Hide loading once both requests are complete\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nbody {\r\n  margin: 0;\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.main-content {\r\n  background-color: #f6f6f6;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.content-wrappers {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n  background-color: #f6f6f6;\r\n  flex-direction: row;\r\n  height: calc(100vh - 60px); /* Adjust based on your header height */\r\n  position: relative;\r\n}\r\n\r\n.content-wrappers.problem-collapsed {\r\n  gap: 0;\r\n}\r\n\r\n.problem-section-wrapper {\r\n  flex: 0 0 500px;\r\n  transition: flex 0.3s ease-in-out;\r\n  margin-right: 10px;\r\n}\r\n\r\n.problem-section-wrapper.collapsed {\r\n  flex: 0 0 50px;\r\n  overflow: hidden;\r\n}\r\n\r\n.drag-drop-wrapper {\r\n  position: relative;\r\n  flex-grow: 1;\r\n}\r\n\r\n.overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  background-color: rgba(197, 204, 195, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n  border-radius: 5px;\r\n}\r\n\r\n.overlay img {\r\n  width: auto;\r\n  height: 70%;\r\n  opacity: 90%;\r\n}\r\n\r\n.overlay h1 {\r\n  font-size: 30px;\r\n}\r\n\r\n.overlay-button {\r\n  padding: 10px;\r\n  font-size: 30px;\r\n  background-color: #79e538;\r\n  opacity: 80%;\r\n  color: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.overlay-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.expand-button {\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  border: none;\r\n  margin-right: 10px;\r\n  color: #ff9500;\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.expand-button:hover {\r\n  background-color: #ff9500;\r\n  color: white;\r\n  transform: translateY(-5px);\r\n}\r\n\r\n/* Constrain loading screen to content-wrappers */\r\n.loading {\r\n  position: absolute;\r\n  top: 130px; /* Adjust based on header height */\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(100% - 60px); /* Adjust based on header height */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n  background-color: #F6F6F6;\r\n}\r\n\r\n</style>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/App.vue b/frontend/src/App.vue
--- a/frontend/src/App.vue	(revision b1e902fd44a494653a71f438ff7a4e655fccc347)
+++ b/frontend/src/App.vue	(date 1726836991459)
@@ -37,7 +37,7 @@
 import Nava from './components/nav.vue';
 import Header from './components/Question/Header.vue';
 import ProblemSection from './components/Question/ProblemSection.vue';
-import Overlay from '@/assets/Topic/Context/Question/overlay.svg';
+import Overlay from './assets/Topic/Context/Question/overlay.svg';
 import loading from './components/Question/loading.vue';
 import DragDrop from './components/Question/DragDrop.vue';
 
